<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:company="clr-namespace:Company.Widgets.Views"
    xmlns:controllers="clr-namespace:Company.Widgets.Controllers"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
    xmlns:interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    >

	<SolidColorBrush x:Key="controlColor" company:OSBrush.OSColor="ControlColor" />
	<SolidColorBrush x:Key="windowColor" company:OSBrush.OSColor="WindowColor" />
	<SolidColorBrush x:Key="controlTextColor" company:OSBrush.OSColor="ControlTextColor" />
	<SolidColorBrush x:Key="controlDarkDarkColor" company:OSBrush.OSColor="ControlDarkDarkColor" />
	<SolidColorBrush x:Key="controlDarkColor" company:OSBrush.OSColor="ControlDarkColor" />
	<SolidColorBrush x:Key="highlightColor" company:OSBrush.OSColor="HighlightColor" />
	<SolidColorBrush x:Key="highlightTextColor" company:OSBrush.OSColor="HighlightTextColor" />
	<SolidColorBrush x:Key="activeBorderColor" company:OSBrush.OSColor="ActiveBorderColor" />

	<controllers:NumberToVisibilityConverter x:Key="numberToVisibilityConverter" />

	<Style TargetType="company:DataGrid">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Background" Value="{StaticResource windowColor}" />
		<Setter Property="Foreground" Value="{StaticResource controlTextColor}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="company:DataGrid">
					<Border Background="{TemplateBinding Background}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<company:HeaderRow ItemsSource="{Binding Columns, RelativeSource={RelativeSource TemplatedParent}}"
												   Visibility="{Binding HeaderVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
												   Tag="{Binding ElementName=horizontalScrollBar}" />
								<TextBlock Grid.Column="1" Width="18" Visibility="{Binding ComputedVerticalScrollBarVisibility, ElementName=mainScroll}" />
							</Grid>
							<ScrollViewer Name="mainScroll" Grid.Row="1" IsTabStop="False" VerticalScrollBarVisibility="Auto"
										  HorizontalScrollBarVisibility="Hidden" Padding="0"
										  controllers:ScrollExtensions.HorizontalOffset="{Binding Value, ElementName=horizontalScrollBar}">
								<interactivity:Interaction.Behaviors>
									<controllers:ScrollIntoViewBehavior />
								</interactivity:Interaction.Behaviors>
								<ItemsPresenter />
							</ScrollViewer>
							<Grid Grid.Row="2">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<company:FooterRow ItemsSource="{Binding Columns, RelativeSource={RelativeSource TemplatedParent}}"
												   Visibility="{Binding FooterVisibility, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
												   DataContext="{Binding Items, RelativeSource={RelativeSource TemplatedParent}}"
												   Tag="{Binding ElementName=horizontalScrollBar}" />
								<ScrollBar Name="horizontalScrollBar" Grid.Row="1" IsTabStop="False"
										   DataContext="{Binding ElementName=mainScroll}"
										   Visibility="{Binding Maximum, RelativeSource={RelativeSource Self},
																Converter={StaticResource numberToVisibilityConverter}}"
										   Orientation="Horizontal" ViewportSize="{Binding ViewportWidth}"
										   Maximum="{Binding ScrollableWidth}" Value="{Binding HorizontalOffset, Mode=TwoWay}" />
								<TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Width="18"
										   Visibility="{Binding ComputedVerticalScrollBarVisibility, ElementName=mainScroll}" />
							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="company:HeaderRow">
		<Setter Property="BorderThickness" Value="1,0,0,1" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="MinHeight" Value="22" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="company:HeaderRow">
					<Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
						<ScrollViewer IsTabStop="False" BorderThickness="0" Padding="0" 
									  VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden"
									  controllers:ScrollExtensions.HorizontalOffset="{Binding Tag.Value, 
																							  RelativeSource={RelativeSource TemplatedParent},
																							  Mode=TwoWay}">
							<interactivity:Interaction.Behaviors>
								<controllers:ScrollIntoViewBehavior />
							</interactivity:Interaction.Behaviors>
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<controllers:SortDirectionToBooleanConverter x:Key="sortDirectionToBooleanConverter" />
	<controllers:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

	<Style TargetType="company:HeaderCell">
		<Setter Property="MinHeight" Value="22" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Background" Value="{StaticResource controlColor}" />
		<Setter Property="Padding" Value="6,3,6,3" />
		<Setter Property="controllers:StyleBinder.Bindings">
			<Setter.Value>
				<controllers:StyleBindingCollection>
					<controllers:StyleBinding Property="Content"
                                              Binding="{Binding Column.Header, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
					<controllers:StyleBinding Property="Width" 
                                              Binding="{Binding Column.ActualWidth, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
					<controllers:StyleBinding Property="Visibility" 
                                              Binding="{Binding Column.Visibility, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
				</controllers:StyleBindingCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="company:HeaderCell">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<ToggleButton IsThreeState="True" Content="{TemplateBinding Content}" IsTabStop="False"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}"
                                          IsChecked="{Binding SortDirection, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay,
                                                              Converter={StaticResource sortDirectionToBooleanConverter}}">
								<ToggleButton.Template>
									<ControlTemplate TargetType="ToggleButton">
										<Grid Background="Transparent">
											<Grid.ColumnDefinitions>
												<ColumnDefinition />
												<ColumnDefinition Width="Auto" />
											</Grid.ColumnDefinitions>
											<ContentPresenter Margin="{TemplateBinding Padding}" />
											<Path Name="SortArrow" RenderTransformOrigin=".5,.5" HorizontalAlignment="Right" 
                                                  VerticalAlignment="Center" Opacity="0" Stretch="Uniform" Width="8" Margin="4,0,0,0" 
                                                  Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z " Grid.Column="1"
												  Fill="{StaticResource controlDarkDarkColor}">
												<Path.RenderTransform>
													<ScaleTransform ScaleX=".9" ScaleY=".9" />
												</Path.RenderTransform>
											</Path>
											<VisualStateManager.VisualStateGroups>
												<VisualStateGroup x:Name="CheckStates">
													<VisualState x:Name="Checked">
														<Storyboard Storyboard.TargetName="SortArrow">
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0" To="1.0" />
															<DoubleAnimation Storyboard.TargetProperty="(RenderTransform).ScaleY" Duration="0" To="-.9"/>
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Unchecked">
														<Storyboard Storyboard.TargetName="SortArrow">
															<DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0" To="1.0" />
														</Storyboard>
													</VisualState>
													<VisualState x:Name="Indeterminate" />
												</VisualStateGroup>
											</VisualStateManager.VisualStateGroups>
										</Grid>
									</ControlTemplate>
								</ToggleButton.Template>
							</ToggleButton>
							<Thumb HorizontalAlignment="Right" Grid.Column="1" Width="8"
                                   Tag="{Binding Column, RelativeSource={RelativeSource TemplatedParent}}"
                                   Visibility="{Binding Tag.IsResizable, RelativeSource={RelativeSource Self}, 
                                                        Converter={StaticResource booleanToVisibilityConverter}}">
								<interactivity:Interaction.Behaviors>
									<controllers:ColumnResizingBehavior />
									<controllers:AutoSizeOnDoubleClickBehavior />
								</interactivity:Interaction.Behaviors>
								<Thumb.Template>
									<ControlTemplate TargetType="Thumb">
										<Border Background="Transparent" />
									</ControlTemplate>
								</Thumb.Template>
							</Thumb>
							<Rectangle Width="1" HorizontalAlignment="Right" Grid.Column="2"
									   Fill="{StaticResource controlDarkColor}" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="company:Row">
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="BorderBrush" Value="{StaticResource activeBorderColor}" />
		<Setter Property="Background" Value="{StaticResource windowColor}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="company:Row">
					<Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
						<ItemsPresenter />
						<VisualStateManager.CustomVisualStateManager>
							<company:CustomVSM />
						</VisualStateManager.CustomVisualStateManager>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="Focus">
								<VisualState Name="Unfocused" />
								<VisualState Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource highlightColor}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="-1,-1,-1,0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="Selection">
								<VisualState Name="Deselected" />
								<VisualState Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource highlightColor}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource highlightTextColor}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<controllers:ByteArrayUriToImageConverter x:Key="byteArrayToImageConverter" />
	<controllers:TypeToAlignmentConverter x:Key="typeToAlignmentConverter" />

	<Style TargetType="company:Cell">
		<Setter Property="MinHeight" Value="22" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="controllers:StyleBinder.Bindings">
			<Setter.Value>
				<controllers:StyleBindingCollection>
					<controllers:StyleBinding Property="Width" 
                                              Binding="{Binding Column.ActualWidth, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
					<controllers:StyleBinding Property="HorizontalContentAlignment"
                                              Binding="{Binding DataType, RelativeSource={RelativeSource Self}, 
                                                        Converter={StaticResource typeToAlignmentConverter}}" />
					<controllers:StyleBinding Property="Visibility" 
                                              Binding="{Binding Column.Visibility, RelativeSource={RelativeSource Self}, Mode=TwoWay}" />
				</controllers:StyleBindingCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<TextBlock Text="{Binding}" TextWrapping="Wrap" TextTrimming="WordEllipsis" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Padding" Value="6,3,6,3" />
		<Setter Property="BorderThickness" Value="0,0,1,0" />
		<Setter Property="BorderBrush" Value="{StaticResource activeBorderColor}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="company:Cell">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<ContentPresenter Name="Content" Tag="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						<VisualStateManager.CustomVisualStateManager>
							<company:CustomVSM />
						</VisualStateManager.CustomVisualStateManager>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="Focus">
								<VisualState Name="Unfocused" />
								<VisualState Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource controlTextColor}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="2" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Padding">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="4,1,5,1" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="Selection">
								<VisualState Name="Deselected" />
								<VisualState Name="Selected">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource highlightColor}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource highlightTextColor}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup Name="Editing">
								<VisualState Name="View" />
								<VisualState Name="Boolean">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsTabStop">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ContentTemplate">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<DataTemplate>
														<CheckBox IsChecked="{Binding Tag.Value, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                                  IsEnabled="{Binding Tag.IsEditable, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
													</DataTemplate>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="NullableBoolean">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsTabStop">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ContentTemplate">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<DataTemplate>
														<CheckBox IsThreeState="True" 
                                                                  IsChecked="{Binding Tag.Value, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                                  IsEnabled="{Binding Tag.IsEditable, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
													</DataTemplate>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="Image">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ContentTemplate">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<DataTemplate>
														<Image Source="{Binding Tag.Value, RelativeSource={RelativeSource TemplatedParent}, 
																		Converter={StaticResource byteArrayToImageConverter}}" />
													</DataTemplate>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="Editor">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsTabStop">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="HorizontalContentAlignment">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Stretch" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="ContentTemplate">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<DataTemplate>
														<company:Editor Content="{Binding}"
																		Value="{Binding Tag.Value, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                                        DataType="{Binding Tag.DataType, RelativeSource={RelativeSource TemplatedParent}}" />
													</DataTemplate>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="company:Editor">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="company:Editor">
					<Border>
						<ContentPresenter Name="Content" Tag="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="Editing">
								<VisualState Name="None" />
								<VisualState Name="EditText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="ContentTemplate">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<DataTemplate>
														<TextBox Text="{Binding Tag.EditedValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                                 SelectionLength="{Binding Text.Length, RelativeSource={RelativeSource Self}, Mode=OneTime}" />
													</DataTemplate>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="EditNumber">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="ContentTemplate">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<DataTemplate>
														<toolkit:NumericUpDown Value="{Binding Tag.EditedValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" 
                                                                                    Minimum="-1000000000" Maximum="1000000000" IsTabStop="False" 
																			   Background="{StaticResource windowColor}"
																			   Foreground="{StaticResource controlTextColor}">
															<toolkit:NumericUpDown.Template>
																<ControlTemplate TargetType="toolkit:NumericUpDown">
																	<Grid>
																		<VisualStateManager.VisualStateGroups>
																			<VisualStateGroup x:Name="CommonStates">
																				<VisualStateGroup.Transitions>
																					<VisualTransition GeneratedDuration="0" />
																				</VisualStateGroup.Transitions>
																				<VisualState x:Name="Normal" />
																				<VisualState x:Name="Disabled">
																					<Storyboard>
																						<DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
																					</Storyboard>
																				</VisualState>
																			</VisualStateGroup>
																			<VisualStateGroup x:Name="FocusStates">
																				<VisualState x:Name="Focused">
																					<Storyboard>
																						<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
																							<SplineDoubleKeyFrame KeyTime="0" Value="1" />
																						</DoubleAnimationUsingKeyFrames>
																					</Storyboard>
																				</VisualState>
																				<VisualState x:Name="Unfocused" />
																			</VisualStateGroup>
																		</VisualStateManager.VisualStateGroups>
																		<toolkit:ButtonSpinner Background="{TemplateBinding Background}" IsTabStop="{TemplateBinding IsTabStop}" x:Name="Spinner" MinWidth="35" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
																			<TextBox BorderThickness="0" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" MinWidth="20" x:Name="Text" AcceptsReturn="False" Text="{TemplateBinding Value}" TextAlignment="Right" TextWrapping="NoWrap">
																				<TextBox.Style>
																					<Style TargetType="TextBox">
																						<Setter Property="Template">
																							<Setter.Value>
																								<ControlTemplate TargetType="TextBox">
																									<ScrollViewer x:Name="ContentElement" Padding="0" BorderThickness="0" />
																								</ControlTemplate>
																							</Setter.Value>
																						</Setter>
																					</Style>
																				</TextBox.Style>
																			</TextBox>
																		</toolkit:ButtonSpinner>
																		<Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Background="#A5FFFFFF" CornerRadius="2.5,2.5,2.5,2.5" />
																		<Border x:Name="FocusVisualElement" IsHitTestVisible="False" Opacity="0" BorderBrush="#FF45D6FA" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1" />
																	</Grid>
																</ControlTemplate>
															</toolkit:NumericUpDown.Template>
														</toolkit:NumericUpDown>
													</DataTemplate>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="EditDate">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="ContentTemplate">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<DataTemplate>
														<sdk:DatePicker SelectedDate="{Binding Tag.EditedValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
																		Foreground="{StaticResource controlTextColor}" />
													</DataTemplate>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="company:FooterRow">
		<Setter Property="BorderThickness" Value="1,0,0,1" />
		<Setter Property="BorderBrush" Value="{StaticResource activeBorderColor}" />
		<Setter Property="Background" Value="{StaticResource windowColor}" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="company:FooterRow">
					<Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
						<ScrollViewer IsTabStop="False" BorderThickness="0" Padding="0" 
									  VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden"
									  controllers:ScrollExtensions.HorizontalOffset="{Binding Tag.Value, 
																							  RelativeSource={RelativeSource TemplatedParent},
																							  Mode=TwoWay}">
							<interactivity:Interaction.Behaviors>
								<controllers:ScrollIntoViewBehavior />
							</interactivity:Interaction.Behaviors>
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
