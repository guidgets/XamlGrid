<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:company="clr-namespace:Company.DataGrid.View"
    xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
    xmlns:toolkitInput="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
    xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit"
    >

    <Style TargetType="company:DataGrid">
		<Setter Property="Background">
			<Setter.Value>
				<SolidColorBrush company:OSBrush.OSColor="WindowColor" />
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="company:DataGrid">
					<Border Background="{TemplateBinding Background}">
						<ScrollViewer toolkit:ScrollViewerExtensions.IsMouseWheelScrollingEnabled="True" 
									  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="company:Row">
		<Setter Property="Background">
			<Setter.Value>
				<SolidColorBrush company:OSBrush.OSColor="WindowColor" />
			</Setter.Value>
		</Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="company:Row">
                    <Border Background="{TemplateBinding Background}">
                       <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="company:Cell">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
            <Setter.Value>
				<ControlTemplate TargetType="company:Cell">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter Name="Cell" />
						<VisualStateManager.CustomVisualStateManager>
							<company:CustomVSM />
						</VisualStateManager.CustomVisualStateManager>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup>
								<VisualState Name="View">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Content">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<TextBlock Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}" />
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="Boolean">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Content" Storyboard.TargetName="Cell">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<CheckBox IsChecked="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="NullableBoolean">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Content" Storyboard.TargetName="Cell">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<CheckBox IsThreeState="True" IsChecked="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="EditText">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Content">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<TextBox Text="{Binding EditorValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="EditNumber">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Content">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<toolkitInput:NumericUpDown Value="{Binding EditorValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState Name="EditDate">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Content">
											<DiscreteObjectKeyFrame KeyTime="0:0:0">
												<DiscreteObjectKeyFrame.Value>
													<controls:DatePicker SelectedDate="{Binding EditorValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
